outils {
	erreurs {
		id1 {
			java="java.io.fileNotFoundException";
			traduction="fichier non trouve, verifier le chemin du fichier ou fichier inaxcecible";
		}
		id2 {
			java="java.lang.NullPointerException";
			traduction="un objet n'est pas initialise, ne pas oublier le 'new'";
		}
	}
	repertoires {
	}
	fonctions {
		abs {
			desc="valeur absolue";
			import="java.lang.Math.abs";
			signature="double abs(int a)";
			type="math";
		}
		acos {
			desc="arcosinus";
			import="java.lang.Math.acos";
			signature="double acos(double a)";
			type="math";
		}
		asin {
			desc="arcsinus";
			import="java.lang.Math.asin";
			signature="double asin(double a)";
			type="math";
		}
		atan {
			desc="arctangente";
			import="java.lang.Math.atan";
			signature="double atan(double a)";
			type="math";
		}
		atan2 {
			desc="arctangente carree";
			import="java.lang.Math.atan2";
			signature="double atan2(double y, double x)";
			type="math";
		}
		cos {
			desc="cosinus";
			import="java.lang.Math.cos";
			signature="double cos(double a)";
			type="math";
		}
		exp {
			desc="exponentielle";
			import="java.lang.Math.exp";
			signature="double exp(double a)";
			type="math";
		}
		floor {
			desc="troncature";
			import="java.lang.Math.floor";
			signature="double floor(double a)";
			type="math";
		}
		log {
			desc="logarithme en base 10";
			import="java.lang.Math.log";
			signature="double log(double a)";
			type="math";
		}
		max {
			desc="maximum entre 2 nombres";
			import="java.lang.Math.max";
			signature="int max(int a,int b)";
			type="math";
		}
		pow {
			desc="a exposant b";
			import="java.lang.Math.pow";
			signature="double pow(double a, double b)";
			type="math";
		}
		sin {
			desc="sinus";
			import="java.lang.Math.sin";
			signature="double sin(double a)";
			type="math";
		}
		sqrt {
			desc="racine carree";
			import="java.lang.Math.sqrt";
			signature="double sqrt(double a)";
			type="math";
		}
		tan {
			desc="tangente";
			import="java.lang.Math.tan";
			signature="double tan(double a)";
			type="math";
		}
		toDegrees {
			desc="conversion radians -> degres";
			import="java.lang.Math.toDegrees";
			signature="double toDegrees(double angrad)";
			type="math";
		}
		toRadians {
			desc="conversion degres -> radians";
			import="java.lang.Math.toRadians";
			signature="double toRadians(double angdeg)";
			type="math";
		}
	}
	macros {
		println {
			signature="void println(String s)";
			traduction="System.out.println(s);";
		}
		print {
			signature="void print(String s)";
			traduction="System.out.print(s);";
		}
		
		dort {
			signature="void dort(int time)";
			traduction="try{Thread.currentThread().sleep(time);}			catch(InterruptedException e){e.printStackTrace();}";
		}

		readString{
			signature="String readString()";
			traduction="
						java.util.Scanner scanner = new java.util.Scanner(System.in);
						return scanner.nextLine();
						";
		}
		
		readChar{
			signature="char readChar()";
			traduction="
			java.util.Scanner scanner = new java.util.Scanner(System.in);
			return scanner.nextLine().charAt(0);";
		}
		
		readInt{
			signature="int readInt()";
			traduction="
				int res = 0;
				try{
					java.util.Scanner scanner = new java.util.Scanner(System.in);
					scanner.findInLine(\"(\\\\d+)\");
					 res =  Integer.parseInt(scanner.match().group(0));
					scanner.nextLine();
				}catch(Exception e){
					System.err.println(\"erreur de lecture de l'entier\");
				}
				return res ;";
		}
		
		readFloat{
			signature="float readFloat()";
			traduction="
				float res = 0;
				try{
					java.util.Scanner scanner = new java.util.Scanner(System.in);
					scanner.findInLine(\"(\\\\d+(.\\\\d*)?)\");
					res =  Float.parseFloat(scanner.match().group(0));
					scanner.nextLine(); 
				}catch(Exception e){
					System.err.println(\"erreur de lecture du flottant\");
				}
				return res ;";
		}
		
		readDouble{
			signature="double readDouble()";
			traduction="
				double res = 0;
				try{
					java.util.Scanner scanner = new java.util.Scanner(System.in);
					scanner.findInLine(\"(\\\\d+(.\\\\d*)?)\");
					res =  Double.parseDouble(scanner.match().group(0));
					scanner.nextLine();
				}catch(Exception e){
					System.err.println(\"erreur de lecture du double\");
				}
				return res ;";
		}
		
		readBoolean{
			signature="boolean readBoolean()";
			traduction="
				java.util.Scanner scanner = new java.util.Scanner(System.in);
				String t  = \"true\" ;
				scanner.findInLine(\"(\\\\w+)\");
				java.util.regex.MatchResult result = scanner.match();
				for (int i=1; i<=result.groupCount(); i++){
					if (t.compareToIgnoreCase(result.group(i)) == 0){
						scanner.nextLine();
						return Boolean.parseBoolean(scanner.match().group(i));
					}
				}
			scanner.nextLine();
			return false;
			";
		}
		
		
	}
}
