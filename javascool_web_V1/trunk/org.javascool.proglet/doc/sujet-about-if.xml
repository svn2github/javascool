<sujet>
  <titre>Un tutoriel pour découvrir l'instruction conditionnelle.</titre>
  
  <objectif>
    Le but de ce tutoriel de découvrir l'instruction conditionnelle. Il faut déja savoir <a href="sujet-hello-world.htm">utiliser l'interface</a>,
    et savoir se servir de <a href="sujet-about-variables.htm">variables</a>.
  </objectif>
  
  <notes>
    <note title="Comment programmer le fait de faire des choix"> A ce stade, nous savons programmer une liste d'instruction, qui . .  font <i>toujours</i> la même chose!
     Voilà qui est bien limité. Un vrai programme doit pouvoir exécuter des instructions différentes selon certaines conditions et il existe une structure universelle
     pour implémenter ce mécanisme. Par exemple:
    <code>
      <p><r>if</r>(temperature <r>&lt;</r> 15) {</p>
      <p><t/>allumer_chauffage();</p>
      <p>}</p>
    </code>
    où la construction permet de n'allumer le chauffage qu'en cas de besoin. Tandis que:
    <code>
      <p><r>if</r>(temperature <r>&lt;</r> 15) {</p>
      <p><t/>allumer_chauffage();</p>
      <p>} <r>else</r> {</p>
      <p><t/>ne_rien_faire();</p>
      <p>}</p>
    </code>
    montre comment se traduit la construction <i><b>si</b> la température est en dessous de 15 degré à lors allumer le chauffage <b>sinon</b> ne rien faire.</i> Ou encore:
    <code>
      <p><r>if</r>(temperature <r>&lt;</r> 15) {</p>
      <p><t/>allumer_chauffage();</p>
      <p>} <r>else if</r>(temperature <r>></r> 100) {</p>
      <p><t/>appeler_les_pompiers();</p>
      <p>} <r>else</r> {</p>
      <p><t/>ne_rien_faire();</p>
      <p>}</p>
    </code>
    montre comment emboiter les instructions conditionnelles.
   </note>
   <note title="Définir des conditions à tester"> Pour définir le test à effectuer nous avons vu que nous pouvions comparer deux valeurs numériques, 
   voici une liste de tests possibles pour des nombres <b>a</b> et <b>b</b> et des chaînes de caratères <b>s</b> et <b>c</b>:
     <code>
       <m>Vrai si et seulement si le nombre a est strictement plus petit que le nombre b:</m>
       <p><t/><t/><t/>a <r>&lt;</r> b</p>
       <m>Vrai si et seulement si le nombre a est strictement plus petit ou égal à le nombre b:</m>
       <p><t/><t/><t/>a <r>&lt;=</r> b</p>
       <m>Vrai si et seulement si le nombre a est égal à le nombre b<footnote id="1"/>:</m>
       <p><t/><t/><t/>a <r>==</r> b</p>
       <m>avec bien sûr les symboles similares pour <r>></r> et <r>>=</r> (strictement plus grand et plus grand ou égal) et <r>!=</r> (pas égal).</m>
       <m>Vrai si et seulement si la chaîne s est égale à la chaîne c<footnote id="1"/></m>
       <p><t/><t/><t/><r>equals</r>(s, c)</p>
     </code>
     Nous pouvons ensuite <i>combiner</i> ces conditions:
     <code>
       <m>Vrai si et seulement si une_condition ET autre_condition sont vraies:</m>
       <p><t/><t/><t/>une_condition <r>&amp;&amp;</r> autre_condition</p>
       <m>Vrai si et seulement si une_condition OU autre_condition, ou les deux, sont vraies:</m>
       <p><t/><t/><t/>une_condition <r>||</r> autre_condition</p>
       <m>Vrai si et seulement si une_condition n'est PAS vraie:</m>
       <p><t/><t/><t/>(<r>!</r>une_condition)</p>
     </code>
     ce qui nous permet de définir des expressions aussi complexes que nous avons besoin, par exemple:
     <code>
       <m>Vrai si et seulement si x est plus grand que a et plus petit que b donc dans l'intervale ]a, b]:</m>
       <p><t/><t/><t/>a <r>&lt;</r> x <r>&amp;&amp;</r> x <r>&lt;</r> b</p> 
       <m>Vrai si et seulement si la reponse égale oui en minuscule ou majuscule:</m>
       <p><t/><t/><t/><r>equals</r>(reponse, <s>oui</s>) <r>||</r> <r>equals</r>(reponse, <s>OUI</s>)</p>
       <m>Vrai si et seulement si l'age est plus que 10 et le nom n'est pas Jean:</m>
       <p><t/><t/><t/>age > 10 <r>&amp;&amp;</r> (<r>!</r> <r>equals</r>(nom, <s>Jean</s>))</p>
     </code>
     en utilisant des parenthèses pour ne pas mélanger les termes de ces expressions.
   </note>
   <note title = "Un nouveau type de variable"> Les variables qui ne prennent que les valeurs <r>true</r> et <r>false</r> ce sont des variables booléennes.
      La valeur <r>true</r> veut dire vrai est la valeur <r>false</r> veut dire faux, par exemple <r>true &amp;&amp; true</r> donne <r>true</r> puisque 
      si deux choses sont vraies alors on peut dire que l'une ET l'autre sont vraies. De même <r>true &amp;&amp; false</r> donne <r>false</r> puisque 
      si une chose est vraie et l'autre fausse on ne peut dire que l'une ET l'autre sont vraies. Le code:
      <code>
        <p><r>boolean</r> x = <r>readBoolean</r>();</p> 
        <p>if (x) { <r>print</r>(<s>OK</s>); } <r>else</r> { <r>print</r>(<s>KO</s>); }</p>
       </code>
       nous permet de lire la variable boolénne x et va imprimer OK/KO selon que sa valeur est Vraie/Fausse. Nous allons l'utiliser.
     </note>
   </notes>
   
   <works>
    <work title="Ajouter des tests à un code"> Reprendre le code proposé pour apprendre à se servir de <a href="sujet-about-variables.htm">variables</a> 
      qui demande le <i>nom</i> et l'<i>âge</i> de l'utilisateur et ajouter
      au bon endroit:
      <code>
        <p><r>if</r>(<r>equals</r>(whoisit, "Toto")) {</p>
        <p><t/>print(<s>Eh : Toto est pas un vrai nom, dis donc !</s>;</p>
        <p>}</p>
      </code>
      puis tester ce code pour vérifier le mécanisme conditionnel. Ajouter ensuite des conditions pour signaler que: <ul>
        <li>Si l'âge est inférieur à 3 ans ou supérieur à 120 ans, ce n'est pas sérieux</li>
        <li>Si le nom est Dieu ou Toto, ce n'est pas crédible</li>
        <li>Si le nom est Nadia, alors c'est super, imprimons un message sympa !</li>
      </ul>
    </work>
    <work title = "Deviner des conditions"> Essayer de deviner ce qui va être imprimer, puis tester dans un petit code et expliquer le résultat
      en <i>traduisant en mot (par une phrase) ce qui a été calculé</i>.<ol>
      <li>Vrai pour <b>x</b> ?<code>
        <p><r>int</r> x = 12;</p>
        <p>if (x <r>>=</r> 12 <r>&amp;&amp;</r> (x <r>&lt;</r> 0 <r>||</r> x <r>></r> 10)) { <r>print</r>(<s>OK</s>); } <r>else</r> { <r>print</r>(<s>KO</s>); }</p>
      </code>Votre commentaire commencera par : <i>Comme x vaut 12 alors <b>x <r>&lt;</r> 0</b> est [vrai?faux?], et <b> x <r>></r> 10</b> est [vrai?faux?],
      donc (x <r>&lt;</r> 0 <r>||</r> x <r>></r> 10) etc..</i></li>
      <li>Upps ?<code>
        <p><r>String</r> nom = <r>readString</r>();</p>
        <p>if (<r>equals</r>(nom, "John") <r>&amp;&amp;</r> <r>equals</r>(nom, "Joan")) { <r>print</r>(<s>OK</s>); } <r>else</r> { <r>print</r>(<s>KO</s>); }</p>
      </code></li>
      <li>Deviner <i>puis</i> vérifier ces 8 réponses:<code>
        <p><r>print</r>(<s>Réponse 1 = </s> + (<r>false</r> <r>||</r> <r>false</r>));</p>
        <p><r>print</r>(<s>Réponse 2 = </s> + (<r>true</r> <r>||</r> <r>false</r>));</p>
        <p><r>print</r>(<s>Réponse 3 = </s> + (<r>false</r> <r>||</r> <r>true</r>));</p>
        <p><r>print</r>(<s>Réponse 4 = </s> + (<r>true</r> <r>||</r> <r>true</r>));</p>
        <p><r>print</r>(<s>Réponse 5 = </s> + (<r>true</r> <r>&amp;&amp;</r> (<r>!</r><r>false</r>)));</p>
        <p><r>print</r>(<s>Réponse 6 = </s> + (<r>!</r>(<r>!</r><r>false</r>)));</p>
        <p><r>print</r>(<s>Réponse 6 = </s> + (<r>!</r>(<r>true</r> <r>&amp;&amp;</r> <r>false</r>)));</p>
        <p><r>print</r>(<s>Réponse 7 = </s> + (<r>!</r>(<r>!</r>(<r>!</r>(<r>!</r>(<r>!</r>(<r>!</r>(<r>!</r>(<r>!</r>(<r>!</r>(<r>!</r>(<r>!</r>(<r>!</r>(<r>!</r>(<r>!</r>(<r>!</r>(<r>!</r>(<r>!</r>(<r>!</r>(<r>!</r>(<r>!</r><r>false</r>)))))))))))))))))))));</p>
        <p><r>print</r>(<s>Réponse 8 = </s> + (equals(<s>toto</s>, <s>titi</s>) <r>||</r> 14 <r>></r> 13));</p>
      </code> et donner une phrase explicative pour chaque réponse.</li>
    </ol>
    <p align="center"><b>(la suite du travail proposé n'est pas indispensable pour comprendre la suite, mais permet d'approfondir le sujet)</b></p>
    </work>
    <work title ="Calculer les tables de vérité">De même que nous conaissons les tables de multiplication, il y des tables pour les ``opérateurs´´ logiques ET, OU et PAS.
      Compléter les tableaux suivants: <table align="center"><tr>
      <td valign="top"><table border ="1"><tr><td><b>x</b></td><td><b><r>!</r>x</b></td></tr>
        <tr><td><r>false</r></td><td><r>?</r></td></tr>
        <tr><td><r>true</r></td><td><r>?</r></td></tr>
      </table></td>
      <td><table border ="1"><tr><td><b>x</b></td><td><b>y</b></td><td><b>x <r>||</r> y</b></td></tr>
        <tr><td><r>false</r></td><td><r>false</r></td><td><r>?</r></td></tr>
        <tr><td><r>false</r></td><td><r>true</r></td><td><r>?</r></td></tr>
        <tr><td><r>true</r></td><td><r>false</r></td><td><r>?</r></td></tr>
        <tr><td><r>true</r></td><td><r>true</r></td><td><r>?</r></td></tr>
      </table></td>
      <td><table border ="1"><tr><td><b>x</b></td><td><b>y</b></td><td><b>x <r>&amp;&amp;</r> y</b></td></tr>
        <tr><td><r>false</r></td><td><r>false</r></td><td><r>?</r></td></tr>
        <tr><td><r>false</r></td><td><r>true</r></td><td><r>?</r></td></tr>
        <tr><td><r>true</r></td><td><r>false</r></td><td><r>?</r></td></tr>
        <tr><td><r>true</r></td><td><r>true</r></td><td><r>?</r></td></tr>
      </table></td>
    </tr></table></work>
    <work title = "Programmer le ou exclusif">Il y a le ou <i>inclusif</i> comme par exemple ``grand ou gentil´´ (on peut être les deux !) c'est le cas de <r>||</r>,
     et le ou ``exclusif´´ comme par exemple ``grand ou petit´´ (mais pas les deux !). 
    Nous voulons donc: <ul>
      <li>non pas écrire ``<b>x</b> OU <b>y</b>´´ (<b>x</b> <r>||</r> <b>y</b>) c'est à dire soit <b>x</b> est vrai, soit <b>y</b> est vrai, soit les deux le sont</li>
      <li>mais écrire ``SOIT <b>x</b> SOIT <b>y</b>´´ c'est à dire soit <b>x</b> est vrai et <b>y</b> est faux, soit <b>x</b> est faux et <b>y</b> est vrai.</li>
    </ul>Prenons deux variables booléennes <b>x</b> et <b>y</b>.<ul>
    <li>Compléter le tableau suivant:<table align="center" border ="1"><tr><td><b>x</b></td><td><b>y</b></td><td><b><r>SOIT</r> x <r>,SOIT</r> y</b></td></tr>
        <tr><td><r>false</r></td><td><r>false</r></td><td><r>?</r></td></tr>
        <tr><td><r>false</r></td><td><r>true</r></td><td><r>?</r></td></tr>
        <tr><td><r>true</r></td><td><r>false</r></td><td><r>?</r></td></tr>
        <tr><td><r>true</r></td><td><r>true</r></td><td><r>?</r></td></tr>
      </table></li>
      <li>Vérifier à la main ou en utilisant le bout de code suivant, que l'expression <b>(((<r>!</r>x) <r>&amp;&amp;</r> y) <r>||</r> (x <r>&amp;&amp;</r> (<r>!</r>y)))</b>
        convient.<code>
          <p><r>print</r>(<s>x ?</s>); <r>boolean</r> x = <r>readBoolean</r>();</p>
          <p><r>print</r>(<s>y ?</s>); <r>boolean</r> y = <r>readBoolean</r>();</p>
          <p><r>print</r>(<s>Réponse: </s> + (((<r>!</r>x) <r>&amp;&amp;</r> y) <r>||</r> (x <r>&amp;&amp;</r> (<r>!</r>y))));</p>
        </code>
      </li>
      <li>Coder l'expression autrement, sous la forme ``x ou y et pas x et y´´.</li>
    </ul></work>
    <work title = "Comprendre l'implication logique"> Prenons un exemple: <i>voler un oeuf implique toujours de voler un boeuf</i><ul>
      <li><c>Certes</c>, si nous trouvons quelqu'un qui a volé un oeuf mais n'a pas volé de boeuf, la phrase est assurément fausse.</li>
      <li><c>De plus</c>, si nous trouvons quelqu'un qui a volé un oeuf et un boeuf, la phrase est assurément vraie.</li>
      <li><c>Par ailleurs</c>.. Et si personne n'a volé d'oeuf ? Ou si quelqu'un a volé (directement) un boeuf sans volé d'oeuf ? 
      La phrase, <i>en tant que telle</i>, n'est PAS fausse.
      Donc elle est vraie<footnote id="2"/>.</li>
    </ul> Bref, nous pouvons dire que la phrase est: <ul>
      <li><c>Vraie</c>, si et seulement si on n'a pas volé d'oeuf ou si on a volé un oeuf et un boeuf. Ou encore.</li>
      <li><c>Ou encore</c>, si et seulement si quelqu'un qui n'a pas volé de boeuf ne peut pas avoir volé d'oeuf.</li>
    </ul>Pour formaliser les choses: <ul>
      <li>Compléter le tableau suivant:<table align="center" border ="1"><tr><td><b>x</b></td><td><b>y</b></td><td><b>x <r>IMPLIQUE</r> y</b></td></tr>
        <tr><td><r>false</r></td><td><r>false</r></td><td><r>?</r></td></tr>
        <tr><td><r>false</r></td><td><r>true</r></td><td><r>?</r></td></tr>
        <tr><td><r>true</r></td><td><r>false</r></td><td><r>?</r></td></tr>
        <tr><td><r>true</r></td><td><r>true</r></td><td><r>?</r></td></tr>
      </table></li>
      <li>En prenant l'exemple: <i>Savoir écrire implique toujours de savoir lire</i> ré-écrire avec des mots l'explication ci dessus qui commencent par 
        <c>Vraie</c> et <c>Ou encore</c> et celle qui commence par <c>Certes</c>, <c>De plus</c>, <c>Par ailleurs</c>.</li>
      <li>Prenons deux variables booléennes <b>x</b> et <b>y</b>, écrire (à partir de la phrase qui commence par <c>Vraie</c> ou bien celle
      qui commence par <c>Ou encore</c>) une formule avec des <r>&amp;&amp;</r>,  <r>||</r> et <r>!</r> et qui corresponde à <b>x <r>IMPLIQUE</r> y</b>.</li>
    </ul></work>
  </works>
  
  <footnotes>
    <p title="A propos de l'égalité"> Notez que le signe <r>=</r> veut dire ``<a href="sujet-about-variables.htm">affecter une valeur</a>´´ 
    tandis que être égal s'écrit <r>==</r> pour les nombres et <b><r>equals</r>(s, c)</b> pour les chaines de caractères: voici quelque chose d'un peu compliqué.</p>
    <p title="A propos de l'implication"> Dire <b>A implique B</b> consiste à dire que si <b>A</b> est vrai alors forcément <b>B</b> est vrai, 
    tandis que si <b>A</b> est faux et bien tout peut arriver à <b>B</b> vrai ou faux, c'est ok.</p>
  </footnotes>
</sujet>
