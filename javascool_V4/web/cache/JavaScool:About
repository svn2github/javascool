<p><br />
Depuis 2008 Java'sCool est un <a class="internal" href="?page=contact&action=credits" title="JavaScool:Crédits" class="mw-redirect">produit vivant et collégial</a> qui permet de piger <a href="https://wiki.inria.fr/sciencinfolycee/JavaScool:Manifeste" title="JavaScool:Manifeste">pourquoi on clique</a>.
</p><p>Rechercher ce qui se dit à propos de Java'sCool sur les <a rel="nofollow" class="external text" href="http://groups.google.com/groups/search?q=javascool&amp;qt_s=Rechercher+des+groupes">forums</a>.
</p><p>Voici ce que les gens disent de Java'sCool:
</p>
<ul><li> <i>Enseignant-chercheur en sciences informatiques, avril 2011</i>&#160;: «la bonne idée de Javascool est que c'est un logiciel "minimal"&#160;: on a juste rassemblé les bonnes briques logicielles pour permettre d'apprendre la programmation impérative, en utilisant uniquement un sous-langage de java. Cela reste tout de même un très gros travail de programmation et documentation.»</li></ul>
<ul><li> <i>Un professeur de lycée, rentrée 2010</i>&#160;: «la richesse de Javascool, c'est avant tout les activités (les «proglets») qui ont été validées en situation dans les classes, donc qui marchent»</li></ul>
<ul><li> <i>Une collégienne de 3ème, février 2011</i>&#160;: «la programmation ce n'est pas très pas passionnant pour moi, après avoir utilisé Java'sCool . . je n'aime toujours pas&#160;! Mais maintenant je <i>sais</i> programmer, donc je comprends mieux ce qu'il y a derrière l'informatique»</li></ul>
<ul><li> <i>Un chercheur en informatique, août 2011</i>&#160;: «c'est tout de même assez bluffant que les versions 3 et 4 aient été développées majoritairement par deux lycéens (encadrés chez Inria), c'est probablement aussi ce qui le rend attrayant».</li></ul>
<ul><li> <i>Un professeur en pré-formation ISN, automne 2009</i>&#160;: «ce qui m'importe, c'est le support: le fait qu'il y ait toujours quelqu'un de disponible, si besoin quand on utilise Javascool».</li></ul>

<!-- 
NewPP limit report
CPU time usage: 0.012 seconds
Real time usage: 0.018 seconds
Preprocessor visited node count: 1/1000000
Preprocessor generated node count: 4/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 1/40
Expensive parser function count: 0/100
-->

<!-- 
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 - -total
-->

<!-- Saved in parser cache with key wiki_sciencinfolycee:pcache:idhash:892-1!*!0!*!*!*!* and timestamp 20151215145914 and revision id 5859
 -->
