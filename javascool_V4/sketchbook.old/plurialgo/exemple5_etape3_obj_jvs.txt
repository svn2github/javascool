
class Skieur  {
	// proprietes
	String nom; 
	double [] notes = new double[5]; 
	// methodes
	void saisir() { 
		int i1; 
		this.nom = readString( "this.nom : " ); 
		for(i1=0; i1<5; i1++) {
			this.notes[i1] = readDouble( "this.notes[" + (i1) + "] : " ); 
		}
	} 
	double calculer_noteFinale() { 
		int i1; 
		double som; 
		double mini; 
		double maxi; 
		double noteFinale; 
		som = 0; 
		mini = 1000; 
		maxi = -1000; 
		for(i1=0; i1<=4; i1=i1+1) {
			som = som + this.notes[i1]; 
			if (this.notes[i1] < mini) {
				mini = this.notes[i1]; 
			}
			if (this.notes[i1] > maxi) {
				maxi = this.notes[i1]; 
			}
		}
		noteFinale = som - mini - maxi; 
		return noteFinale;
	} 
	// constructeurs
	Skieur () { 
		//  ajouter des instructions
	} 
}

void main() {
	int nbSkieur;  
	nbSkieur = readInt( "nbSkieur : " ); 
	Skieur [] objets = new Skieur[nbSkieur];
	int ii; 
	for(ii=0; ii<nbSkieur; ii++) {
		objets[ii] = new Skieur();
	}
	int k;
	for(k=1; k<=nbSkieur; k=k+1) {
		objets[k-1].saisir(); 
	}
	// tri par note finale decroissante
	Skieur copie;	
	for(ii=1; ii<=nbSkieur-1; ii=ii+1) {
		for(k=ii+1; k<=nbSkieur; k=k+1) {
			if (objets[ii-1].calculer_noteFinale() < objets[k-1].calculer_noteFinale()) {
				// on echange les 2 skieurs dans le tableau objets
				copie = objets[ii-1]; 
				objets[ii-1] = objets[k-1]; 
				objets[k-1] = copie; 
			}
		}
	}
	// affichage du classement (nom et note finale)
	double noteFinale;
	for(k=1; k<=nbSkieur; k=k+1) {
		println( "nom : " + objets[k-1].nom ); 
		noteFinale = objets[k-1].calculer_noteFinale();  
		println( "noteFinale : " + noteFinale ); 
	}
} 