<div title="La «proglet» paintBrush">
  <p class="margin">
    <p>Cliquer <l class="newtab" link="exercice.htm" text="ici"/> pour faire l'activité.</p>
  </p>
  <p>
    Cette proglet permet de dessiner dans une petite image de résolution minimale pour comprendre le codage matriciel pixels par pixels. 
  </p>

  <p>
    Au démarrage de la proglet, le mode proglet utilise les
    fonctions suivantes qu'il faudra modifier pour reproduire le
    comportement du mode démo.
    <div class="code">
     <p><r>void main</r>() {</p>
     <p><T/><r>setManipImage</r>(<r>new PaintBrushManipImage</r>() {</p>
     <m>NE RIEN ECRIRE AU DESSUS DE CETTE ZONE</m>
     <m>Affiche un point de coordonnées (x,y)</m>
     <p><T/><T/><r>public void affichePoint</r>(<r>int</r> <b>x</b>, <r>int</r> <b>y</b>, <r>int</r> <b>couleur</b>) {  }</p>
     <m>Supprime les points sur une zone carré de largeur 3 pixels et centrée en (x,y)</m>
     <p><T/><T/><r>public void supprimePoint</r>(<r>int</r> <b>x</b>, <r>int</r> <b>y</b>) { } </p>
     <m>Trace une ligne de diagonale (x0,y0) -- (x1,y1)</m>
     <p><T/><T/><r>public void afficheLigne</r>(<r>int</r> <b>x0</b>, <r>int</r> <b>y0</b>, <r>int</r> <b>x1</b>, <r>int</r> <b>y1</b>, <r>int</r> <b>couleur</b>) { } </p>
     <m>Trace un rectangle de diagonale (x0,y0) -- (x1,y1)</m>
     <p><T/><T/><r>public void afficheRectangle</r>(<r>int</r> <b>x0</b>, <r>int</r> <b>y0</b>, <r>int</r> <b>x1</b>, <r>int</r> <b>y1</b>, <r>int</r> <b>couleur</b>) { } </p>
     <m>Rotation de 90° vers la gauche de l'image</m>
  	 <p><T/><T/><r>public void rotationGauche</r>() {}</p>
     <m>Pot de peinture : remplir avec la couleur spécifiée tous les pixels
      voisins de (x,y) et ayant la même couleur</m>
     <p><T/><T/><r>public void remplir</r>(<r>int</r> <b>x</b>, <r>int</r> <b>y</b>, <r>int</r> <b>couleur</b>) { } </p>
     <m>NE RIEN ECRIRE EN DESSOUS DE CETTE ZONE</m>
     <p><T/>});</p>
     <p>}</p>
   </div>
  </p>

  <p>La proglet s'appuie sur un tableau de 32x32 pixels que l'on
    peut écrire/modifier avec les méthodes suivantes:

    <div class="code">
      <p><r>int</r> couleur = <r>getPixel</r>(x, y);</p>
      <p><r>setPixel</r>(x, y, couleur);</p>
    </div>

    où <div class="ul">
       <div><b>x</b> est un <r>int</r>, entre <b>[0, 31]</b>, abscisse du point;</div>
       <div><b>y</b> est un <r>int</r>, entre <b>[0, 31]</b>, ordonnée du point;</div>
       <div><b>couleur</b> est un entier entre <c>0</c> pour la couleur noire
	 et <c>15</c> pour la couleur blanche (notée <c>F</c> en format hexadécimal),
	 les autres valeurs correspondant à la palette de couleur.</div>

 </div>

   <p>Ce sont ces méthodes qu'il faut utiliser pour compléter les méthodes 
     <r>affichePoint</r>, <r>supprimePoint</r>, <r>remplir</r>, 
     <r>afficheLigne</r> et <r>afficheRectangle</r>.</p>

   <div>On pourra partir du programme <l class="editor" link="Exemple.jvs" text="exemple donné ici"/>.</div>
  </p>
<p>Cette «proglet» est un composant logiciel ouvert dont documentation et code-source sont disponibles <l link="http://javascool.gforge.inria.fr/?page=proglets&amp;action=show&amp;id=paintBrush&amp;helpFile=api/org/javascool/proglets/paintBrush/package-summary.html" text="ici"/></p>
</div>
