
<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 3.2 Final//EN" "http://www.w3.org/TR/html4/strict.dtd">
<div>
   <h2>Comprendre un exemple de principe algorithmique: la dichotomie.</h2>
   
   <div>Si l'est un m&eacute;canisme algorithmique g&eacute;n&eacute;ral accessible aux lyc&eacute;ens et qui illustre parfaitement ce que peut &ecirc;tre une notion
      abstraite d'informatique, c'est bien le principe de recherche dichotomie. D&eacute;couvrons le sur trois exemples.
   </div>
   
     
   <div>
      <h2>Rechercher un mot dans un dictionnaire.</h2>Prenons par exemple ce dictionnaire des drapeaux des environ 200 (pr&eacute;cis&eacute;ment 195) &eacute;tats du monde
          et faisons rechercher &agrave; un algorithme le drapeau de l'Albanie ou de la Zambie. 
          
      <div><a href="the-proglet.htm"><img src="proglet-dicho.jpg" alt="La &laquo;proglet&raquo; dichotomie">La &laquo;proglet&raquo; dichotomie</a></div>
          <i>Attention :</i> impossible d'invoquer l'intelligence humaine ici, il s'agit uniquement d'intelligence m&eacute;canique. 
      Pas facile donc de  profiter par exemple de notre connaissance naturelle du fait que les mots commen&ccedil;ant par "A" sont plut&ocirc;t
      au d&eacute;but, et "Z" &agrave; la fin. 
          Ce serait int&eacute;ressant de prendre en compte de tels &eacute;l&eacute;ments, 
          mais nous pr&eacute;sentons que c'est une m&eacute;thode ad-hoc qui risque donc de manquer de g&eacute;n&eacute;ralit&eacute; pour &ecirc;tre r&eacute;utilis&eacute;e dans un
      autre contexte que celui d'un dictionnaire. 
          Cherchons plut&ocirc;t des m&eacute;thodes ``brutes&acute;&acute;, par exemple . .
          
      <div>
         <h3>Tourner les pages une &agrave; une.</h3>Tourner les pages une &agrave; une jusqu'&agrave; trouver le pays si il existe, ce qui pourrait s'&eacute;crire facilement comme ceci:
               
         <p>
            <table witdh="90%" border="1" align="center">
               <tr>
                  <td>
                     <div class="code">
                                
                        <div><font color="#990000"><b>trouver</b></font>(pays) { 
                        </div>
                                
                        <div>
                           &nbsp;&nbsp;&nbsp;
                           page = debut;
                        </div>
                                
                        <div>
                           &nbsp;&nbsp;&nbsp;
                           <font color="#990000"><b>tantque</b></font> page &lt;= fin; {
                        </div>
                                
                        <div>
                           &nbsp;&nbsp;&nbsp;
                           
                           &nbsp;&nbsp;&nbsp;
                           <font color="#990000"><b>si</b></font> (dictionnaire(page) == pays) <font color="#990000"><b>alors</b></font> { <font color="#990000"><b>renvoyer</b></font> page; }
                        </div>
                                
                        <div>
                           &nbsp;&nbsp;&nbsp;
                           
                           &nbsp;&nbsp;&nbsp;
                           page = page + 1;
                        </div>
                                
                        <div>
                           &nbsp;&nbsp;&nbsp;
                           }
                        </div>
                                
                        <div>
                           &nbsp;&nbsp;&nbsp;
                           <font color="#990000"><b>renvoyer</b></font> <font color="#008000">"pas trouv&eacute;"</font>;
                        </div>
                                
                        <div>}</div>
                              
                     </div>
                  </td>
               </tr>
            </table>
         </p>
               c'est &agrave; dire &eacute;num&eacute;rer les pages du d&eacute;but &agrave; la fin du dictionnaire, ce qui est impl&eacute;ment&eacute; &agrave; travers la boucle:
               
         <p>
            <table witdh="90%" border="1" align="center">
               <tr>
                  <td>
                     <div class="code">
                                
                        <div>
                           &nbsp;&nbsp;&nbsp;
                           page = debut;
                        </div>
                                
                        <div>
                           &nbsp;&nbsp;&nbsp;
                           <font color="#990000"><b>tantque</b></font> page &lt;= fin; {
                        </div>
                                
                        <div>../..</div>
                                
                        <div>
                           &nbsp;&nbsp;&nbsp;
                           
                           &nbsp;&nbsp;&nbsp;
                           page = page + 1;
                        </div>
                                
                        <div>
                           &nbsp;&nbsp;&nbsp;
                           }
                        </div>
                              
                     </div>
                  </td>
               </tr>
            </table>
         </p>
               dont on sort en renvoyant la page du dictionnaire correspondant au pays si elle est trouv&eacute;e, comme le sp&eacute;cifie ce test
         de comparaison:
               
         <p>
            <table witdh="90%" border="1" align="center">
               <tr>
                  <td>
                     <div class="code">
                                
                        <div>
                           &nbsp;&nbsp;&nbsp;
                           
                           &nbsp;&nbsp;&nbsp;
                           <font color="#990000"><b>si</b></font> (dictionnaire(page) == pays) <font color="#990000"><b>alors</b></font> { <font color="#990000"><b>renvoyer</b></font> page; }
                        </div>
                              
                     </div>
                  </td>
               </tr>
            </table>
         </p>
               et dont on sort, sinon, &agrave; la fin en signalant ne pas avoir trouv&eacute; la page.
               
         <div>Voil&agrave; un algorithme qui marche &agrave; coup s&ucirc;r. 
                  Il co&ucirc;tera une &eacute;tape de calcul (ici: un test de comparaison) si le pays est au tout d&eacute;but du dictionnaire. 
                  Il va co&ucirc;ter 195 &eacute;tapes de calcul si il est &agrave; la fin. 
                  Si le dictionnaire contient N items (ici N = 195), et si tout est r&eacute;parti de mani&egrave;re uniforme, il est facile de se convaincre,
            
                  que de 1 &agrave; N &eacute;tapes de calcul, en moyenne, il y en aura environ C = N/2 &eacute;tapes &agrave; pr&eacute;voir
         </div>
               
         <div>Nous aurions bien s&ucirc;r pu &eacute;num&eacute;rer les pages dans un autre ordre, par exemple de la fin au d&eacute;but, 
                  ou de mani&egrave;re plus loufoque (par exemple toutes les pages paires puis les impaires, ..) mais cela n'aurait rien chang&eacute;:
            
                  pourvu que nous &eacute;num&eacute;rions toutes les pages nous sommes certain de trouver le pays recherch&eacute;, et ce sera alors toujours
            avec un co&ucirc;t de l'ordre N &eacute;tapes de calcul.
         </div>
               
         <div>Si vous aimez les probabilit&eacute;s, vous serez amus&eacute; de calculer que si vous ouvrez le livre au hasard jusqu'&agrave; trouver la page
            recherch&eacute;e, 
                  il vous en co&ucirc;tera . . et bien environ N &eacute;tapes de calcul aussi !! 
                  C'est &agrave; dire le m&ecirc;me ordre de grandeur que si vous les ouvrez de mani&egrave;re d&eacute;termin&eacute;e, ce qui n'est pas forc&eacute;ment un r&eacute;sultat
            intuitif.
         </div>
               
         <div>Posons nous maintenant une autre question:</div>
             
      </div>
          
      <div>
         <h3>Peut on &ecirc;tre plus efficace ?.</h3>
               
         <div>Si le dictionnaire n'&eacute;tait pas tri&eacute; par ordre alphab&eacute;tique, c'est &agrave; dire tous les pays stock&eacute;s en d&eacute;sordre, la r&eacute;ponse est
            non: 
                  nous serions de fait oblig&eacute; de tourner toutes les pages pour &ecirc;tre certain de trouver le pays recherch&eacute;. 
                  Mais voil&agrave; que le dictionnaire est totalement ordonn&eacute;e de "A jusqu'&agrave; Z" et c'est une propri&eacute;t&eacute; de cette structure de
            donn&eacute;e que nous pourrions exploiter.
         </div>
               
         <div>En effet: si j'ouvre le dictionnaire, disons, au milieu, sur la page de la France, par exemple, tandis que je cherche l'Albanie,
            
                  je vois que ce n'est pas la bonne page mais j'apprends quelque chose de plus: puisque l'Albanie est <i>avant</i> la France sa page est donc forc&eacute;ment situ&eacute;e 
                  dans la moiti&eacute; gauche du dictionnaire, je n'ai donc plus &agrave; chercher dans toutes les pages de droite, mais uniquement
            dans la moiti&eacute; des pages de gauche. 
                  J'ai en une op&eacute;ration <i>r&eacute;duit mon espace de recherche de moiti&eacute;</i>.
         </div>
               
         <div>D'environ 200 pages, il ne me restera plus que 100 pages &agrave; explorer. 
                  Puis, en reprenant le m&ecirc;me proc&eacute;d&eacute;, 50 pages, 25 pages, 12 ou 13 pages, 6 ou 7 pages, 3 ou 4 pages, 1ou 2 pages et le
            pays sera trouv&eacute;. 
                  Si nous recomptons nous voyons qu'il y a uniquement eu C = 7 ou 8 &eacute;tapes de calcul  !!
         </div>
               
         <div>On parle de <a href="http://fr.wikipedia.org/wiki/Dichotomie">dichotomie</a> (&laquo; couper en deux &raquo; en grec) ce processus de recherche o&ugrave; &agrave; chaque &eacute;tape, 
                  on coupe en deux parties l'espace de recherche. 
                    
            <div>Intuitivement, on se rend compte que c'est bien en coupant en deux parties &eacute;gales 
                       que nous sommes s&ucirc;r d'avoir des deux c&ocirc;t&eacute;s un espace de recherche minimal &agrave; l'&eacute;tape suivante (en part in&eacute;gales, 
                       la malchance pourrait nous conduire &agrave; rechercher dans un espace plus grand).
            </div>
         </div>
               
         <div>Il faut comprendre que le gain est immense: nous donnons dans le tableau ci dessous le nombre C d'&eacute;tapes de calcul en fonction
            de quelques nombres N d'items:
                  
            <p>
               <table align="center" width="90%" cellpadding="5px" bgcolor="#eeeeee" class="table">
                          
                  <tr>
                     <td valign="top">N = 2<sup>C</sup></td>
                     <td valign="top">1</td>
                     <td valign="top">2</td>
                     <td valign="top">4</td>
                     <td valign="top">8</td>
                     <td valign="top">16</td>
                     <td valign="top">..</td>
                     <td valign="top">256</td>
                     <td valign="top">..</td>
                     <td valign="top">1024</td>
                     <td valign="top">..</td>
                     <td valign="top">un million</td>
                     <td valign="top">..</td>
                     <td valign="top">un milliard</td>
                  </tr>
                          
                  <tr>
                     <td valign="top">C = log<sub>2</sub>(C)
                     </td>
                     <td valign="top">0</td>
                     <td valign="top">1</td>
                     <td valign="top">2</td>
                     <td valign="top">3</td>
                     <td valign="top">4</td>
                     <td valign="top">..</td>
                     <td valign="top">8</td>
                     <td valign="top">..</td>
                     <td valign="top">10</td>
                     <td valign="top">..</td>
                     <td valign="top">20</td>
                     <td valign="top">..</td>
                     <td valign="top">30</td>
                  </tr>
                        
               </table><br></p>
                  le fait de diviser en deux de mani&egrave;re it&eacute;rative, permet par exemple de rechercher en un maximum de 26 &eacute;tapes, 
                  le nom de quelqu'un dans l'annuaire des 60 millions de fran&ccedil;ais.
         </div>
               
         <div>Pour les math&eacute;maticiens en herbe, voil&agrave; un tr&egrave;s bel exemple des relations entre un nombre et son logarithme (ici en base 2),
            
                  mais surtout un moyen concret, incarn&eacute;, de montrer l'usage de cette fonction math&eacute;matique abstraite.
         </div>
               
         <div>Il y a plusieurs mani&egrave;res de programmer ce m&eacute;canisme, en voici une o&ugrave; nous restreignons l'espace de recherche entre deux valeurs
            min et max:
                  
            <p>
               <table witdh="90%" border="1" align="center">
                  <tr>
                     <td>
                        <div class="code">
                                  
                           <div><font color="#990000"><b>trouver</b></font>(pays) { 
                           </div>
                                  
                           <div>
                              &nbsp;&nbsp;&nbsp;
                              min = debut; max = fin;
                           </div>
                                  
                           <div>
                              &nbsp;&nbsp;&nbsp;
                              <font color="#990000"><b>repeter {</b></font></div>
                                  
                           <div>
                              &nbsp;&nbsp;&nbsp;
                              
                              &nbsp;&nbsp;&nbsp;
                              milieu = (min + max) / 2;
                           </div>
                                  
                           <div>
                              &nbsp;&nbsp;&nbsp;
                              
                              &nbsp;&nbsp;&nbsp;
                              <font color="#990000"><b>si</b></font> (dictionnaire(milieu) == pays) <font color="#990000"><b>alors</b></font> <font color="#990000"><b>renvoyer</b></font> milieu;
                           </div>
                                  
                           <div>
                              &nbsp;&nbsp;&nbsp;
                              
                              &nbsp;&nbsp;&nbsp;
                              <font color="#990000"><b>si</b></font> (min == max) <font color="#990000"><b>alors</b></font> <font color="#990000"><b>renvoyer</b></font> <font color="#008000">"pas trouv&eacute;"</font>;
                           </div>
                                  
                           <div>
                              &nbsp;&nbsp;&nbsp;
                              
                              &nbsp;&nbsp;&nbsp;
                              <font color="#990000"><b>si</b></font> (dictionnaire(milieu) &lt; pays) <font color="#990000"><b>alors</b></font> min = milieu;
                           </div>
                                  
                           <div>
                              &nbsp;&nbsp;&nbsp;
                              
                              &nbsp;&nbsp;&nbsp;
                              <font color="#990000"><b>si</b></font> (dictionnaire(milieu) &gt; pays) <font color="#990000"><b>alors</b></font> max = milieu;
                           </div>
                                  
                           <div>
                              &nbsp;&nbsp;&nbsp;
                              }
                           </div>
                                  
                           <div>}</div>
                                
                        </div>
                     </td>
                  </tr>
               </table>
            </p>
         </div>
              
         <div>On remarque que la quantit&eacute; <tt>max - min</tt> vaut <tt>fin - debut</tt> au d&eacute;marrage puis se divise par 2 &agrave; chaque &eacute;tape, 
                 donc va forc&eacute;ment devenir plus petit que 1, donc &eacute;gale &agrave; 0 puisque ce sont des nombres entiers. 
                 Par cons&eacute;quent, l'algorithme va s'arr&ecirc;ter forc&eacute;ment au bout d'un nombre fini, logarithmique, d'&eacute;tapes. 
                   
            <div>Finir en retournant la page si elle est trouv&eacute;e, ou "pas trouv&eacute;" si l'intervalle de recherche est de longueur nulle sans avoir
               trouv&eacute; la page recherch&eacute;e. 
                      Bref, fonctionner comme nous l'avions esp&eacute;r&eacute;.
            </div>
         </div>
                
         <div>Posons nous maintenant une autre question:  dans quelle mesure ce m&eacute;canisme algorithmique est il g&eacute;n&eacute;rique ? 
                   Regardons un tout ``autre&acute;&acute; exemple pour s'en convaincre.
         </div>
              
      </div>
         
   </div>
   
      
   <div>
      <h2>Un tout ``autre&acute;&acute; probl&egrave;me: convertir une tension &eacute;lectrique en valeur num&eacute;rique.</h2>
           Pour ``deviner&acute;&acute; la valeur d'une tension &eacute;lectrique continue, 
           un ordinateur num&eacute;rique doit en g&eacute;n&eacute;ral comparer cette valeur &agrave; une valeur de r&eacute;f&eacute;rence qu'il va produire en sortie,
      
           pour de proche en proche cerner cette valeur, comme le montre le diagramme ci-dessous:
           
      <div><a href="../../convanalogique/doc-files/the-proglet.htm"><img src="../../convanalogique/doc-files/proglet-conva.jpg" alt="La &laquo;proglet&raquo; convanalogique">La &laquo;proglet&raquo; convanalogique</a></div>
           L&agrave; encore, la fa&ccedil;on de fonctionner de ces convertisseurs &agrave; approximations successives est de proc&eacute;der de mani&egrave;re dichotomique
      en divisant l'espace de recherche de 2 en 2. 
           Cela permet d'atteindre tr&egrave;s rapidement les pr&eacute;cisions requises, le mill&egrave;me en 10 &eacute;tapes, le millioni&egrave;me en 20, comme
      vu pr&eacute;c&eacute;demment.
         
   </div>
   
      
   <div>
      <h2>Le probl&egrave;me math&eacute;matique sous-jacent: trouver le z&eacute;ro d'une fonction monotone dans un intervalle.</h2>
           
      <div>Tous ces probl&egrave;mes sont reli&eacute;s au probl&egrave;me math&eacute;matique suivant: r&eacute;soudre une &eacute;quation de la forme <tt>f(x) = 0, min &lt; x &lt; xmax</tt>,
              o&ugrave; <tt>f()</tt> est une fonction continue monotone dans l'intervalle <tt>[min, max]</tt> donc a au plus une solution, puisque bijection vers un intervalle r&eacute;el.
      </div>
           
      <div>Si elle change de signe dans cet intervalle <tt>f(min) f(max) &lt; 0</tt> et elle a une solution unique.
      </div>
           
      <div>C'est le cas par exemple de la fonction <tt>sin(x)</tt> dans l'intervalle <tt>[2, 4]</tt> o&ugrave; elle s'annule en Pi, comme le montre la figure ci-dessous:
              
         <div><a href="../../exosdemaths/doc-files/about-proglet.htm"><img src="dicho3.gif" alt="La courbe sin(x) dans [2,4]">La courbe sin(x) dans [2,4]</a></div>
      </div>
           
      <div>L&agrave; encore le m&ecirc;me m&eacute;canisme de dichotomie permet de r&eacute;soudre le probl&egrave;me comme incarn&eacute; dans l'algorithme suivant:
               
         <p>
            <table witdh="90%" border="1" align="center">
               <tr>
                  <td>
                     <div class="code">
                               
                        <div><font color="#990000"><b>zero</b></font>(f) { 
                        </div>
                               
                        <div>
                           &nbsp;&nbsp;&nbsp;
                           min = debut; max = fin;
                        </div>
                               
                        <div>
                           &nbsp;&nbsp;&nbsp;
                           <font color="#990000"><b>si</b></font> (f(min) f(max) &gt;= 0) <font color="#990000"><b>alors</b></font> <font color="#990000"><b>renvoyer</b></font> <font color="#008000">"pas de solution"</font>;
                        </div>
                               
                        <div>
                           &nbsp;&nbsp;&nbsp;
                           <font color="#990000"><b>repeter {</b></font></div>
                               
                        <div>
                           &nbsp;&nbsp;&nbsp;
                           
                           &nbsp;&nbsp;&nbsp;
                           milieu = (min + max) / 2;
                        </div>
                               
                        <div>
                           &nbsp;&nbsp;&nbsp;
                           
                           &nbsp;&nbsp;&nbsp;
                           <font color="#990000"><b>si</b></font> (|max - min| &lt; epsilon) <font color="#990000"><b>alors</b></font> <font color="#990000"><b>renvoyer</b></font> milieu;
                        </div>
                               
                        <div>
                           &nbsp;&nbsp;&nbsp;
                           
                           &nbsp;&nbsp;&nbsp;
                           <font color="#990000"><b>sinon si</b></font> (f(max) f(milieu) &lt; 0) <font color="#990000"><b>alors</b></font> min = milieu;
                        </div>
                               
                        <div>
                           &nbsp;&nbsp;&nbsp;
                           
                           &nbsp;&nbsp;&nbsp;
                           <font color="#990000"><b>sinon si</b></font> (f(min) f(milieu) &lt; 0) <font color="#990000"><b>alors</b></font> max = milieu;
                        </div>     
                               
                        <div>
                           &nbsp;&nbsp;&nbsp;
                           
                           &nbsp;&nbsp;&nbsp;
                           <font color="#990000"><b>sinon</b></font> <font color="#990000"><b>renvoyer</b></font> <font color="#008000">"pas de solution"</font>;
                        </div>
                               
                        <div>
                           &nbsp;&nbsp;&nbsp;
                           }
                        </div>
                               
                        <div>}</div>
                             
                     </div>
                  </td>
               </tr>
            </table>
         </p>
      </div>
           
      <div>Il ne diff&egrave;re du pr&eacute;c&eacute;dent que par la fa&ccedil;on de d&eacute;tecter le fait qu'il n'y ait pas de solution et par la fa&ccedil;on de faire les
         tests
              (car l'espace de recherche n'est plus celui des nombres entiers mais des nombres r&eacute;els).
      </div>
           
      <div>C'est donc bien un principe algorithmique qui fonctionne &agrave; la fois pour &laquo;des op&eacute;rations num&eacute;riques et aussi symboliques&raquo; (de
         recherche de mots),
              selon un principe d&eacute;j&agrave; remarqu&eacute; <a href="http://fr.wikipedia.org/wiki/Ada_Lovelace">Ada Lovelace</a> un si&egrave;cle avant que ne fonctionne le 1er ordinateur. 
              Et c'est un des <a href="http://fr.wikipedia.org/wiki/Dichotomie">m&eacute;canismes algorithmiques</a> les plus utilis&eacute;s.
      </div>
       
   </div>
   
    
   <ul class="ul">
      <h2>Pour aller plus loin:.</h2>
         
      <li><a href="sujet-appli-dicho.htm">Un tutoriel sur la recherche dichotomique</a> (<a href="https://wiki.inria.fr/sciencinfolycee/Profs2009:ProgletSoluce#Recherche_dichotomique_dans_un_dictionnaire_tri.C3.A9">corrig&eacute;</a> accessible au professeur, nous <a href="mailto:thierry.vieville@sophia.inria.fr?subject=[javascool] A propos de qq proglet : acc%C3%A8s aux soluce sur [scienceinfolycee]&amp;body=Bonjour,%0a,%20%20Je%20suis%20un%20enseignant%20du%20lyc%C3%A9e%20de%20??%20%C3%A0%20??%20et%20souhaite%20acc%C3%A9der%20aux%20soluces%20des%20proglets.%0a,%20%20%20Voici%20un%20%C3%A9l%C3%A9ment%20qui%20prouve%20que%20je%20ne%20suis%20pas%20%C3%A9l%C3%A8ve%20!%20:%20??%0a,%20%20Signature%20:%20??">contacter</a> pour l'acc&egrave;s).
      </li>
         
      <li><a href="../../convanalogique/doc-files/sujet-appli-conva.htm">Un tutoriel sur la conversion analogique num&eacute;rique dichotomique</a> (<a href="https://wiki.inria.fr/sciencinfolycee/Profs2009:ProgletSoluce#Recherche_dichotomique_d.27une_valeur_d.27un_convertisseur_analogique-num.C3.A9rique">corrig&eacute;</a> accessible au professeur, nous <a href="mailto:thierry.vieville@sophia.inria.fr?subject=[javascool] A propos de qq proglet : acc%C3%A8s aux soluce sur [scienceinfolycee]&amp;body=Bonjour,%0a,%20%20Je%20suis%20un%20enseignant%20du%20lyc%C3%A9e%20de%20??%20%C3%A0%20??%20et%20souhaite%20acc%C3%A9der%20aux%20soluces%20des%20proglets.%0a,%20%20%20Voici%20un%20%C3%A9l%C3%A9ment%20qui%20prouve%20que%20je%20ne%20suis%20pas%20%C3%A9l%C3%A8ve%20!%20:%20??%0a,%20%20Signature%20:%20??">contacter</a> pour l'acc&egrave;s).
      </li>
       
   </ul>
   
</div>