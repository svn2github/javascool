<div title="La «proglet» paintbrush">
  <p class="margin">Autres <l link="../../../org/javascool/doc-files/about-proglets.htm" text="«proglets»"/>.</p>
  <p>
    Cette proglet<l class="note" link="1"/> permet de dessiner dans une petite image de résolution minimale pour comprendre le codage 

  <p><b>[à compléter]</b></p>
  
     <div>La construction suivante permet de définir une nouvelle implémentation des méthodes permettant de dessiner:<div class="code">
     <p><r>PaintBrush.setManipImage</r>(<r>new PaintBrushManipImage</r>() {</p>
     <m>Affiche un point de coordonnées (x,y)</m>
     <p><T/><r>void affichePoint</r>(<r>PaintBrushImage</r> <b>image</b>, <r>int</r> <b>x</b>, <r>int</r> <b>y</b>, <r>int</r> <b>couleur</b>) {  }</p>
     <m>Supprime les points sur une zone carré de largeur 3 pixels et centrée en (x,y)</m>
     <p><T/><r>void supprimePoint</r>(<r>PaintBrushImage</r> <b>image</b>, <r>int</r> <b>x</b>, <r>int</r> <b>y</b>) { } </p>
     <m>Trace une ligne de diagonale (x0,y0) -- (x1,y1)</m>
     <p><T/><r>void afficheLigne</r>(<r>PaintBrushImage</r> <b>image</b>, <r>int</r> <b>x0</b>, <r>int</r> <b>y0</b>, <r>int</r> <b>x1</b>, <r>int</r> <b>y1</b>, <r>int</r> <b>couleur</b>) { } </p>
     <m>Trace un rectangle de diagonale (x1,y1) -- (x2,y2)</m>
     <p><T/><r>void afficheRectangle</r>(<r>PaintBrushImage</r> <b>image</b>, <r>int</r> <b>x0</b>, <r>int</r> <b>y0</b>, <r>int</r> <b>x1</b>, <r>int</r> <b>y1</b>, <r>int</r> <b>couleur</b>) { } </p>
     <m>Pot de peinture : remplir avec la couleur spécifiée tous les pixels voisins de (x,y) et ayant la même couleur</m>
     <p><T/><r>void remplir</r>(<r>PaintBrushImage</r> <b>image</b>, <r>int</r> <b>x</b>, <r>int</r> <b>y</b>, <r>int</r> <b>couleur</b>) { } </p>
     <p>});</p>
   </div></div>

   <div>Les images <r>PaintBrushImage</r> peuvent être manipulées avec les méthodes suivantes:
   <p>Pour définir lire/écrire un point les fonctions <r>set/get</r> sont à disposition: <div class="code">
      <p><r>int</r> couleur = <r>image.get</r>(x, y);</p>
      <p><r>image.set</r>(x, y, couleur);</p>
     </div><div class="ul">
       <div>où <b>x</b> est un <r>int</r>, entre <b>[0, image.maxX()]</b>, abscisse du point;</div>
       <div>où <b>y</b> est un <r>int</r>, entre <b>[0, image.maxY()]</b>, ordonnée du point;</div>
       <div>où <b>couleur</b> est un entier entre <c>0</c> (pour le "noir") et <c>15</c> (pour le "blanc"), les autres valeurs correspondant à la palette de couleur.</div>
     </div>Elles permettent de lire/écrire un pixel du dessin.</p>
     <p>De plus:    <div class="code">
     <p><r>int</r> width = <r>image.maxX()</r>();</p>
     <p><r>int</r> height = <r>image.maxY()</r>();</p>
   </div> renvoient la largeur (width) et hauteur (height) du dessin.</p>
   <p>Ce sont ces méthodes qu'il faut utiliser pour implémenter les méthodes ci-dessus.</p>
 </div>

   <div>On pourra partir du programme <l link="http://javascool.gforge.inria.fr/v3/?page=api:proglet/paintbrush/doc-files/Exemple.jvs.html" text="exemple donné ici"/>.</div>

  </p>
  <div class="notes">
    <div id="1">Cette proglet est un <l link="http://fr.wikipedia.org/wiki/Open_source" text="code source libre"/>, programmée en Java et <l link="http://javascool.gforge.inria.fr/v3/?page=api:/proglet/paintbrush/ImageDisplay.html" text="documentée"/> 
    pour sa libre redistribution, l'accès <l link="http://javascool.gforge.inria.fr/v3/?page=api:/proglet/paintbrush/PaintBrush.java.html" text="au code source"/>, et permettre des développements dérivés.</div>
  </div>
</div>
