
<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<div>
   <h2>vrac a trier.</h2>
   
   
   
   Le but de ce tutoriel est de vous apprendre &agrave; utiliser et manipuler les structures de donn&eacute; que sont les tableaux.
   
   
   Le but de ce tutoriel est de vous apprendre &agrave; utiliser et manipuler les structures de donn&eacute; que sont les tableaux.
   
   Notes :
   
   Pour r&eacute;aliser ce tutoriel vous pouvez utiliser les fonctions pr&eacute;sente dans la bo&icirc;te &agrave; outils dont le fonctionnement est rappel&eacute;
   dans le manuel d'utilisation.
   
   Vous trouverez ici un rappel sur les tableaux .
   
   voici l'exemple du programme qui range dans un tableau diff&eacute;rents nombres et qui les affiches :
   
   Exemple{
   
   void afficher(int[] tab){
   for(int i=0 ; i&lt;tab.length; i++){
   println(tab[i]+"");
   }
   }
   
   
   void main(){
   int[] tab = new int[8];
   tab[0] = 1;
   tab[1] = 2;
   tab[2] = 3;
   tab[3] = 4;
   tab[4] = 5;
   tab[5] = 6;
   tab[6] = 7;
   tab[7] = 8;
   afficher(tab);
   }
   }
   Le fichier correspondant : Exemple.jvs
   
   Travaille demand&eacute; :
   
   Le programme suivant est-il correct ? expliquez pourquoi.
   
   void main(){
   int[] tab = new int[8];
   tab[0] = 10;
   tab[1] = 5;
   tab[2] = 9;
   tab[3] = "trois";
   tab[4] = 7;
   tab[5] = 59;
   tab[6] = "douze";
   tab[7] = 1;
   }
   
   Ecrivez une fonction "ajouterUn(...)" qui ajoute dans le tableau plac&eacute; en param&eacute;tre 10 fois le chiffre 1 ,faites ceci &agrave; l'aide
   d'une boucle "for".
   Faites afficher le tableau.
   
   Faite la m&ecirc;me chose que la question pr&eacute;cedente avec une boucle "while".
   Les tableaux se distinguent des autres conteneurs sur deux points : l'efficacit&eacute; et le type. Un tableau constitue la mani&egrave;re
   la plus efficace que propose Java pour stocker et acc&eacute;der al&eacute;atoirement &agrave; une s&eacute;quence d'objets (en fait de r&eacute;f&eacute;rence sur
   ces objets). Un tableau est une simple s&eacute;quence lin&eacute;aire, ce qui rend l'acc&egrave;s aux &eacute;l&eacute;ments extr&ecirc;mement rapide; mais cette
   rapidit&eacute; se paye : la taille d'un tableau est fix&eacute;e lors de la cr&eacute;ation et ne peut plus &ecirc;tre chang&eacute; pendant toute la dur&eacute;e
   de sa vie. Une solution est de cr&eacute;er un nouveau tableau et de d&eacute;placer toutes les r&eacute;f&eacute;rences de l'ancien tableau vers le nouveau.
   [modifier] D&eacute;claration de tableaux
   
   La cr&eacute;ation de tableaux en Java se fait &agrave; peu pr&egrave;s de la m&ecirc;me mani&egrave;re que la cr&eacute;ation de variables. Prenons l'exemple suivant
   :
   
   String[] monTableau ;
   //On a cr&eacute;&eacute; un tableau de cha&icirc;nes de caract&egrave;res mais ce tableau n'est
   //pas encore utilisable car il n'a pas de taille !
   monTableau = new String[nombreDObjets] ;
   //Il est maintenant utilisable et index&eacute; de 0 &agrave; nombreDObjets-1.
   //On peut toutefois compresser l'&eacute;criture en mettant directement :
   String[] monTableau2 = new String[nombreDObjets] ;
   
   Il est possible de faire des tableaux de tout type de donn&eacute;es, y compris les types que l'on cr&eacute;e soit m&ecirc;me (mais nous verrons
   &ccedil;a dans le chapitre sur les objets). Il est aussi possible de cr&eacute;er des tableaux de tableaux et plus encore. Par exemple :
   
   int[][] tableauDeTableau = new int[5][4] ;
   //Ainsi tableauDeTableau est en r&eacute;alit&eacute; une matrice de taille 5x4.
   //Ceci peut &ecirc;tre tr&egrave;s utile pour la manipulation de grille par exemple.
   boolean[][][] pave = new boolean[3][4][5] ;
   //On peut aussi cr&eacute;er des tableaux &agrave; plus de deux dimensions, 
   //on n'est en fait pas limit&eacute; dans la dimension de notre tableau
   
   Remarque : un tableau ne peut contenir qu'un seul type de donn&eacute;e. Ainsi, il est impossible de stocker des entiers dans un
   tableau qui a &eacute;t&eacute; d&eacute;clar&eacute; comme contenant des cha&icirc;nes de caract&egrave;res.
   [modifier] Utilisation de tableaux
   
   Maintenant que l'on sait d&eacute;clarer un tableau, il peut &ecirc;tre int&eacute;ressant de savoir comment s'en servir. Plusieurs choses sont
   &agrave; savoir :
   
   * la premi&egrave;re est comment utiliser les objets pr&eacute;sents dans le tableau
   * la deuxi&egrave;me est comment utiliser de mani&egrave;re pratique les tableaux
   
   int[] monTableau = new int[5] ;
   //Ici on cr&eacute;e un tableau de 5 entier, les indices du tableau
   //vont donc de 0 &agrave; 4.
   
   for(int i=0 ; i&lt;monTableau.length ; ++i){
   monTableau[i] = i + 1 ;
   }
   
   Ici, on utilise une boucle for pour parcourir l'ensemble du tableau. On utilisera le plus souvent ce genre de boucle sur les
   tableaux car leur taille est d&eacute;finie lors de la d&eacute;claration et donc on connait leur taille. Pour &ecirc;tre sur de ne pas se tromper
   sur la taille du tableau, ce nous ferait sortir du tableau lors de l'ex&eacute;cution de la boucle, on utilise ici la m&eacute;thode length
   qui est valable sur tous les tableaux de donn&eacute;es de type de base.
   
   Si l'on cr&eacute;e un tableau d'objets qui ne sont pas d'un type de base, il faudrait alors utiliser la m&eacute;thode length() h&eacute;rit&eacute;e
   de Object mais on reverra ceci plus en d&eacute;tail dans le partie destin&eacute;e aux objets.
   
   monTableau[i] d&eacute;signe le i+1 i&egrave;me entier de monTableau
   
   
   
   
   
   construire
   lire/ecrire
   it&eacute;rer 
   d&eacute;truire
   
   tab;eaux &agrave; plusieurs dimensions
   
   
   
</div>