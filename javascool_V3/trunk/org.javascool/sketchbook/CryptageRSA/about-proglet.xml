<div title="La «proglet» CryptageRSA">
  <p class="margin">Autres <l link="../../org/javascool/doc-files/about-proglets.htm" text="«proglets»"/>.</p>
  <p>Cette proglet<l class="note" link="1"/> permet de manipuler les concepts liés à l'encryptage/décryptage par clés publique et privée, RSA. 
  La cryptologie, science du secret, englobe la cryptographie — le codage secret d'un message — et la cryptanalyse — le décodage d'un message codé. 
	Le principe de la cryptographie consiste à définir une transformation des symboles d'un langage (les lettres ou les mots par exemple) qui soit difficilement inversible, 
	de telle sorte que retrouver le mot original à partir du mot codé devienne une opération difficile à effectuer. 
	Il existe deux grandes familles d'algorithmes de cryptographie : les algorithmes symétriques (à clé secrète) 
	et les algorithmes asymétriques (à clé publique). 
	Le système RSA est un système de cryptographie à clé publique donc asymétrique.
	
	L'intérêt de cette manipulation est de faire passer la non-symétrie du processus: autrement dit, tout le monde peut encrypter (par la clé publique),
    mais seule une personne pourra décrypter (à l'aide de la clé privée).
  
  </p>
  <p>Pour manipuler les notions et outils du cryptage, il faut utiliser la construction javascool. 
  Toutes ces fonctions sont accessibles par l'interface, ou par des fonctions programmable: <div class="code">
    <m>Créer une clé privée et une clé publique pour le codage et décodage de messages:</m>
    <p><r>CryptageRSA.createKeys</r>()</p>
    </div>où: <div class="ul">
      <p>est retourné les clés sous forme de BigInteger.</p>
    </div><div class="code">
    <m>Encrypter un message à l'aide d'une clé (publique):</m>
    <p><r>CryptageRSA.encrypt</r>(<r>String</r> n, <r>BigInteger</r> pk1, <r>BigInteger</r> pk2)</p>
    </div>où: <div class="ul">
      <p><c>m</c> est le message à encrypter, à inscrire entre "".</p>
      <p><c>pk1</c> est la clé publique, 1ere partie.</p>
      <p><c>pk2</c> est la clé publique, 2nde partie.</p>
      <p>est retourné le message encrypté sous forme de chiffres.</p>
    </div><div class="code">
    <m>Décrypter un message à l'aide de clés:</m>
    <p><r>CryptageRSA.decrypt</r>(<r>BigInteger</r> me, <r>BigInteger[]</r> k)</p>
    </div>où: <div class="ul">
      <p><c>me</c> est le message encrypté sous forme de chiffres.</p>
      <p><c>k</c> sont les clés, publique et privée, sous forme de vecteur à 2 lignes.</p>
      <p>est retourné le message decrypté en caractères.</p>
    </div><div class="code">
   <div>Un exemple d'utilisation se fait lors du lancement de la proglet avec une fenêtre d'interaction.</div>
   <div class="notes">
    <div id="1">Cette proglet est un <l link="http://fr.wikipedia.org/wiki/Open_source" text="code source libre"/>, 
    programmée en <l link="http://processing.org" text="Processing"/> et disponible sous forme de code documenté:
    <div class="table"><p>
      <p><l link="http://javascool.gforge.inria.fr/v3/?page=api:/sketchbook/CryptageRSA/CryptageRSA.pde.html" text="CryptageRSA"/></p>
      <p><l link="http://javascool.gforge.inria.fr/v3/?page=api:/sketchbook/CryptageRSA/interface.pde.html" text="interface"/></p>
      <p><l link="http://javascool.gforge.inria.fr/v3/?page=api:/sketchbook/CryptageRSA/fonctions.pde.html" text="fonctions"/></p>
    </p></div>
    pour permettre des développements dérivés.</div>
  </div>
</div>
